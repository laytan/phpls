name: golangci-lint
on:
  push:
    tags:
      - v*
    branches:
      - main
    paths:
      - '**/*.go'
      - 'third-party/unsafenil'
      - '.github/workflows/golangci-lint.yml'

  pull_request:
    paths:
      - '**/*.go'
      - 'third-party/unsafenil'
      - '.github/workflows/golangci-lint.yml'

permissions:
  contents: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-go@v4
        id: set-up-go
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Get gobin
        id: get-gobin
        run: echo ::set-output name=gobin::$(go env GOPATH)/bin

      - name: Cache unsafenil & golangci-lint
        uses: actions/cache@v3
        id: cache-others
        with:
          path: |
              unsafenil.so
              ${{ steps.get-gobin.outputs.gobin }}
              ~/.cache/golangci-lint

          key: ${{ runner.os }}-go-lint-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-lint-

      - name: Build unsafenil
        if: ${{ steps.cache-others.outputs.cache-hit != 'true' }}
        run: go build -o ../../unsafenil.so -buildmode=plugin plugin/unsafenil.go
        working-directory: ./third_party/unsafenil


      # In order to use unsafenil, we need to build from source so CGO is used.
      # See https://github.com/golangci/golangci-lint-action/issues/540
      # See https://github.com/golangci/golangci-lint/issues/1276
      - name: Install golangci-lint
        if: ${{ steps.cache-others.outputs.cache-hit != 'true' }}
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Lint
        run: golangci-lint run --timeout 5m

