name: Go test

on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Go
      id: set-up-go
      uses: actions/setup-go@v3
      with:
        check-latest: true
        cache: true
        go-version-file: go.mod

    - name: Get gobin
      id: get-gobin
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          echo ::set-output name=gobin::$(go env GOPATH)\bin
        else
          echo ::set-output name=gobin::$(go env GOPATH)/bin
        fi
      shell: bash

    - name: Cache richgo
      uses: actions/cache@v3
      id: cache-richgo
      with:
        path: ${{ steps.get-gobin.outputs.gobin }}
        key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-test-

    - name: Install richgo
      if: ${{ steps.cache-richgo.outputs.cache-hit != 'true' }}
      run: go install github.com/kyoh86/richgo@latest

    - name: Generate
      run: go generate ./...

    - name: Test
      run: richgo test -cover -race -shuffle=on -timeout=60s ./...
      env:
        RICHGO_FORCE_COLOR: 1
        CI: true
