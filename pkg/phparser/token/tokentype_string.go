// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF - -1]
	_ = x[Illegal-1]
	_ = x[PHPStart-2]
	_ = x[PHPEnd-3]
	_ = x[PHPEchoStart-4]
	_ = x[NonPHP-5]
	_ = x[Ident-6]
	_ = x[KeywordsStart-7]
	_ = x[Function-8]
	_ = x[Return-9]
	_ = x[Abstract-10]
	_ = x[And-11]
	_ = x[As-12]
	_ = x[Break-13]
	_ = x[Callable-14]
	_ = x[Case-15]
	_ = x[Catch-16]
	_ = x[Class-17]
	_ = x[Clone-18]
	_ = x[Const-19]
	_ = x[Continue-20]
	_ = x[Default-21]
	_ = x[Die-22]
	_ = x[Exit-23]
	_ = x[Do-24]
	_ = x[Echo-25]
	_ = x[Else-26]
	_ = x[ElseIf-27]
	_ = x[EndDeclare-28]
	_ = x[EndFor-29]
	_ = x[EndForEach-30]
	_ = x[EndIf-31]
	_ = x[EndSwitch-32]
	_ = x[EndWhile-33]
	_ = x[Extends-34]
	_ = x[Final-35]
	_ = x[Finally-36]
	_ = x[Fn-37]
	_ = x[For-38]
	_ = x[ForEach-39]
	_ = x[Global-40]
	_ = x[GoTo-41]
	_ = x[If-42]
	_ = x[Implements-43]
	_ = x[Include-44]
	_ = x[IncludeOnce-45]
	_ = x[InstanceOf-46]
	_ = x[InsteadOf-47]
	_ = x[Interface-48]
	_ = x[KVar-49]
	_ = x[Match-50]
	_ = x[Namespace-51]
	_ = x[New-52]
	_ = x[Or-53]
	_ = x[Print-54]
	_ = x[Private-55]
	_ = x[Protected-56]
	_ = x[Public-57]
	_ = x[Readonly-58]
	_ = x[Require-59]
	_ = x[RequireOnce-60]
	_ = x[Static-61]
	_ = x[Switch-62]
	_ = x[Throw-63]
	_ = x[Trait-64]
	_ = x[Try-65]
	_ = x[Use-66]
	_ = x[While-67]
	_ = x[XOR-68]
	_ = x[Yield-69]
	_ = x[YieldFrom-70]
	_ = x[True-71]
	_ = x[False-72]
	_ = x[KeywordsEnd-73]
	_ = x[Reference-74]
	_ = x[Variadic-75]
	_ = x[Var-76]
	_ = x[Number-77]
	_ = x[Not-78]
	_ = x[ErrorSuppress-79]
	_ = x[QuestionMark-80]
	_ = x[Concat-81]
	_ = x[Assign-82]
	_ = x[ConcatAssign-83]
	_ = x[Plus-84]
	_ = x[Minus-85]
	_ = x[Divide-86]
	_ = x[Times-87]
	_ = x[Comma-88]
	_ = x[Colon-89]
	_ = x[Semicolon-90]
	_ = x[LParen-91]
	_ = x[RParen-92]
	_ = x[LBrace-93]
	_ = x[RBrace-94]
	_ = x[LBracket-95]
	_ = x[RBracket-96]
	_ = x[BinaryOr-97]
	_ = x[ClassAccess-98]
	_ = x[LineComment-99]
	_ = x[BlockComment-100]
	_ = x[SimpleString-101]
	_ = x[StringStart-102]
	_ = x[StringContent-103]
	_ = x[StringEnd-104]
	_ = x[Equals-105]
	_ = x[StrictEquals-106]
	_ = x[NotEquals-107]
	_ = x[StrictNotEquals-108]
	_ = x[Count-109]
}

const (
	_TokenType_name_0 = "EOF"
	_TokenType_name_1 = "IllegalPHPStartPHPEndPHPEchoStartNonPHPIdentKeywordsStartFunctionReturnAbstractAndAsBreakCallableCaseCatchClassCloneConstContinueDefaultDieExitDoEchoElseElseIfEndDeclareEndForEndForEachEndIfEndSwitchEndWhileExtendsFinalFinallyFnForForEachGlobalGoToIfImplementsIncludeIncludeOnceInstanceOfInsteadOfInterfaceKVarMatchNamespaceNewOrPrintPrivateProtectedPublicReadonlyRequireRequireOnceStaticSwitchThrowTraitTryUseWhileXORYieldYieldFromTrueFalseKeywordsEndReferenceVariadicVarNumberNotErrorSuppressQuestionMarkConcatAssignConcatAssignPlusMinusDivideTimesCommaColonSemicolonLParenRParenLBraceRBraceLBracketRBracketBinaryOrClassAccessLineCommentBlockCommentSimpleStringStringStartStringContentStringEndEqualsStrictEqualsNotEqualsStrictNotEqualsCount"
)

var (
	_TokenType_index_1 = [...]uint16{0, 7, 15, 21, 33, 39, 44, 57, 65, 71, 79, 82, 84, 89, 97, 101, 106, 111, 116, 121, 129, 136, 139, 143, 145, 149, 153, 159, 169, 175, 185, 190, 199, 207, 214, 219, 226, 228, 231, 238, 244, 248, 250, 260, 267, 278, 288, 297, 306, 310, 315, 324, 327, 329, 334, 341, 350, 356, 364, 371, 382, 388, 394, 399, 404, 407, 410, 415, 418, 423, 432, 436, 441, 452, 461, 469, 472, 478, 481, 494, 506, 512, 518, 530, 534, 539, 545, 550, 555, 560, 569, 575, 581, 587, 593, 601, 609, 617, 628, 639, 651, 663, 674, 687, 696, 702, 714, 723, 738, 743}
)

func (i Type) String() string {
	switch {
	case i == -1:
		return _TokenType_name_0
	case 1 <= i && i <= 109:
		i -= 1
		return _TokenType_name_1[_TokenType_index_1[i]:_TokenType_index_1[i+1]]
	default:
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
