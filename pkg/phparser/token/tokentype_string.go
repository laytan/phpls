// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF - -1]
	_ = x[Illegal-1]
	_ = x[PHPStart-2]
	_ = x[PHPEnd-3]
	_ = x[PHPEchoStart-4]
	_ = x[NonPHP-5]
	_ = x[Ident-6]
	_ = x[KeywordsStart-7]
	_ = x[Function-8]
	_ = x[Return-9]
	_ = x[Abstract-10]
	_ = x[And-11]
	_ = x[As-12]
	_ = x[Break-13]
	_ = x[Callable-14]
	_ = x[Case-15]
	_ = x[Catch-16]
	_ = x[Class-17]
	_ = x[Clone-18]
	_ = x[Const-19]
	_ = x[Continue-20]
	_ = x[Default-21]
	_ = x[Die-22]
	_ = x[Do-23]
	_ = x[Echo-24]
	_ = x[Else-25]
	_ = x[ElseIf-26]
	_ = x[EndDeclare-27]
	_ = x[EndFor-28]
	_ = x[EndForEach-29]
	_ = x[EndIf-30]
	_ = x[EndSwitch-31]
	_ = x[EndWhile-32]
	_ = x[Extends-33]
	_ = x[Final-34]
	_ = x[Finally-35]
	_ = x[Fn-36]
	_ = x[For-37]
	_ = x[ForEach-38]
	_ = x[Global-39]
	_ = x[GoTo-40]
	_ = x[If-41]
	_ = x[Implements-42]
	_ = x[Include-43]
	_ = x[IncludeOnce-44]
	_ = x[InstanceOf-45]
	_ = x[InsteadOf-46]
	_ = x[Interface-47]
	_ = x[KVar-48]
	_ = x[Match-49]
	_ = x[Namespace-50]
	_ = x[New-51]
	_ = x[Or-52]
	_ = x[Print-53]
	_ = x[Private-54]
	_ = x[Protected-55]
	_ = x[Public-56]
	_ = x[Readonly-57]
	_ = x[Require-58]
	_ = x[RequireOnce-59]
	_ = x[Static-60]
	_ = x[Switch-61]
	_ = x[Throw-62]
	_ = x[Trait-63]
	_ = x[Try-64]
	_ = x[Use-65]
	_ = x[While-66]
	_ = x[XOR-67]
	_ = x[Yield-68]
	_ = x[YieldFrom-69]
	_ = x[KeywordsEnd-70]
	_ = x[Reference-71]
	_ = x[Variadic-72]
	_ = x[Var-73]
	_ = x[Number-74]
	_ = x[Not-75]
	_ = x[QuestionMark-76]
	_ = x[Assign-77]
	_ = x[Plus-78]
	_ = x[Minus-79]
	_ = x[Comma-80]
	_ = x[Colon-81]
	_ = x[Semicolon-82]
	_ = x[LParen-83]
	_ = x[RParen-84]
	_ = x[LBrace-85]
	_ = x[RBrace-86]
	_ = x[LBracket-87]
	_ = x[RBracket-88]
	_ = x[ClassAccess-89]
	_ = x[LineComment-90]
	_ = x[BlockComment-91]
	_ = x[SimpleString-92]
	_ = x[StringStart-93]
	_ = x[StringContent-94]
	_ = x[StringEnd-95]
	_ = x[Count-96]
}

const (
	_TokenType_name_0 = "EOF"
	_TokenType_name_1 = "IllegalPHPStartPHPEndPHPEchoStartNonPHPIdentKeywordsStartFunctionReturnAbstractAndAsBreakCallableCaseCatchClassCloneConstContinueDefaultDieDoEchoElseElseIfEndDeclareEndForEndForEachEndIfEndSwitchEndWhileExtendsFinalFinallyFnForForEachGlobalGoToIfImplementsIncludeIncludeOnceInstanceOfInsteadOfInterfaceKVarMatchNamespaceNewOrPrintPrivateProtectedPublicReadonlyRequireRequireOnceStaticSwitchThrowTraitTryUseWhileXORYieldYieldFromKeywordsEndReferenceVariadicVarNumberNotQuestionMarkAssignPlusMinusCommaColonSemicolonLParenRParenLBraceRBraceLBracketRBracketClassAccessLineCommentBlockCommentSimpleStringStringStartStringContentStringEndCount"
)

var (
	_TokenType_index_1 = [...]uint16{0, 7, 15, 21, 33, 39, 44, 57, 65, 71, 79, 82, 84, 89, 97, 101, 106, 111, 116, 121, 129, 136, 139, 141, 145, 149, 155, 165, 171, 181, 186, 195, 203, 210, 215, 222, 224, 227, 234, 240, 244, 246, 256, 263, 274, 284, 293, 302, 306, 311, 320, 323, 325, 330, 337, 346, 352, 360, 367, 378, 384, 390, 395, 400, 403, 406, 411, 414, 419, 428, 439, 448, 456, 459, 465, 468, 480, 486, 490, 495, 500, 505, 514, 520, 526, 532, 538, 546, 554, 565, 576, 588, 600, 611, 624, 633, 638}
)

func (i TokenType) String() string {
	switch {
	case i == -1:
		return _TokenType_name_0
	case 1 <= i && i <= 96:
		i -= 1
		return _TokenType_name_1[_TokenType_index_1[i]:_TokenType_index_1[i+1]]
	default:
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
